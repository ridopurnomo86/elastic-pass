generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  name              String            @db.VarChar(255)
  email             String            @unique
  username          String?           @db.VarChar(255)
  password          String            @db.VarChar(255)
  salt              String?           @db.VarChar(255)
  address           String?           @db.VarChar(255)
  remember_token    String?           @db.VarChar(255)
  country           String?           @db.VarChar(255)
  bio               String?           @db.VarChar(255)
  role              Role?             @default(USER)
  gender            Gender?           @default(NONGENDERED)
  birth_date        DateTime?         @db.Timestamp(0)
  phone_number      String?           @db.VarChar(255)
  dialing_code      String?           @db.VarChar(128)
  email_verified_at DateTime?         @db.Timestamp(0)
  created_at        DateTime          @default(now())
  updated_at        DateTime          @updatedAt
  city              String?           @db.VarChar(255)
  Event             Event[]
  image_profile     UserImageProfile?
}

model UserImageProfile {
  id        Int    @id @default(autoincrement())
  userId    Int    @unique
  version   Int    @default(0)
  image_url String @db.VarChar(255)
  file_id   String @db.VarChar(255)
  user      User   @relation(fields: [userId], references: [id])
}

model EventType {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  icon       String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  Event      Event[]
}

model EventCategory {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Event      Event[]
}

model Event {
  id            Int            @id @default(autoincrement())
  slug          String         @unique
  name          String         @db.VarChar(255)
  price         Decimal        @db.Decimal(10, 0)
  description   String         @db.Text
  country       String         @db.VarChar(255)
  created_at    DateTime       @default(now())
  updated_at    DateTime
  category_id   Int?
  type_id       Int?
  user_id       Int
  city          String         @db.VarChar(255)
  image_url     String         @db.VarChar(255)
  ended_date    DateTime?      @db.Timestamp(0)
  start_date    DateTime?      @db.Timestamp(0)
  EventCategory EventCategory? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: SetNull)
  EventType     EventType?     @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: SetNull)
  User          User           @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([category_id], map: "Event_category_id_fkey")
  @@index([type_id], map: "Event_type_id_fkey")
  @@index([user_id], map: "Event_user_id_fkey")
}

enum Role {
  USER
  ORGANIZER
}

enum Gender {
  MALE
  FEMALE
  NONGENDERED
}
